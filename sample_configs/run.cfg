# This is an example config definition with all options turned on, and three dummy cases defined
# to turn off any job, simply remove it from the config and the job list for each case
# documentation on the config sections can be found here: https://e3sm-project.github.io/processflow/docs/html/configuration.html



# mandatory global options
[global]
    # base project path for all processflow input and output
    project_path = /base/path/for/this/project
    # an email address to send notifications
    email = your_email_address@institution.gov

# optional image hosting options, remove this section to turn off web hosting
[img_hosting]
    # the base url for the web host server, only used for constructing notification urls
    img_host_server = my-web-host-server.institution.gov
    # the base directory to copy diagnostic output for hosting
    host_directory = /base/host/directory/<my_user_name>
    # the prefix needed to access this directory from the outside world
    url_prefix = '/public_host_url/<my_user_name>'

# mandatory options for all each case
[simulations]
    # the first year of data
    start_year = 1
    # the last year of data
    end_year = 100
    # each case gets its own config section, denoted by the full name of the case inside double brackets
    [[case.id.number.1]]
        # the base path for the data from this case
        local_path = /base/path/for/this/cases/local/data
        # a nice short name to put on plots
        short_name = case_1
        # the name of the native atm/lnd grid
        native_grid_name = ne30
        # the name of the native ocean grid
        native_mpas_grid_name = oEC60to30v3
        # which data types should be handled by this case, this case will only grab atm data
        data_types = atm
        # which job types should be run on this case, this case will run all the defined jobs
        job_types = amwg, climo, timeseries, cmor
        # for each case, list which cases it should have diagnostics run on it, 
        # using 'obs' for model-vs-obs, and 'all' to run all possibilities
        comparisons = obs
        # CMIP6 metadata for this case
        user_input_json_path = /export/baldwin32/projects/my_project/user_input_case_1.json
    [[case.id.number.2]]
        local_path = /base/path/for/this/cases/data
        short_name = case_2
        native_grid_name = ne30
        native_mpas_grid_name = oEC60to30v3
        data_types = all
        job_types = amwg, climo, timeseries, cmor
        # this case will have model-to-model diagnostics against only case number 1
        comparisons = case.id.number.1
        user_input_json_path = /export/baldwin32/projects/my_project/user_input_case_1.json
    [[case.id.number.3]]
        local_path = /base/path/for/this/cases/data
        short_name = case_3
        native_grid_name = ne30
        native_mpas_grid_name = oEC60to30v3
        data_types = atm, lnd, ocn
        job_types = climo, e3sm_diags, timeseries, cmor
        # this case will have model-to-model diagnostics against all other defined cases as well as vs obs
        comparisons = all
        user_input_json_path = /export/baldwin32/projects/my_project/user_input_case_1.json


# this section defines all the post processing jobs that should be run
# any of these sections can be removed to turn that job off
[post-processing]

    # this is the config section for generating climotoligies. This section is optional
    # but needed if running amwg or e3sm_diags
    [[climo]]
        # the year frequencies it should be run on, in this case it will generate climos for 1-50, 51-100, and 1-100
        run_frequency = 50, 100
        # the name of the regridding target, this is just used to organize the output so it can be any string
        destination_grid_name = fv129x256
        # the path to the regrid map that should be used for the regridding process
        regrid_map_path = /p/cscratch/acme/data/map_ne30np4_to_fv129x256_aave.20150901.nc

    # optional config for generating timeseries
    [[timeseries]]
        run_frequency = 50, 100
        # the timeseries job will also generate regridded timeseries
        destination_grid_name = fv129x256
        regrid_map_path = /p/cscratch/acme/data/map_ne30np4_to_fv129x256_aave.20150901.nc
        # each of the following sections is optional, if you dont want to extract any
        # atm/lnd/ocn variables simply remove that line
        # each name after the data type is a variable that will be extracted as a timeseries, these are simply examples
        atm = FSNTOA, FLUT, FSNT, FLNT, FSNS, FLNS, SHFLX, QFLX, PRECC, PRECL, PRECSC, PRECSL, TS, TREFHT
        lnd = SOILICE, SOILLIQ, SOILWATER_10CM, QINTR, QOVER, QRUNOFF, QSOIL, QVEGT, TSOI
    
    # optional config for regridding model output
    [[regrid]]
        # each section is a data type to be regridded, simply remove any sections
        # that you dont want regridding for
        [[[lnd]]]
            # land data needs the source grid and destination grids
            source_grid_path = /export/zender1/data/grids/ne30np4_pentagons.091226.nc
            destination_grid_path = /export/zender1/data/grids/129x256_SCRIP.20150901.nc 
            destination_grid_name = fv129x256
        [[[atm]]]
            # atm data only needs a regrid name and map
            regrid_map_path = /p/cscratch/acme/data/map_ne30np4_to_fv129x256_aave.20150901.nc
            destination_grid_name = fv129x256
        [[[ocn]]]
            # ocn data only needs a regrid name and map
            regrid_map_path = ~/grids/map_oEC60to30v3_to_0.5x0.5degree_bilinear.nc
            destination_grid_name = 0.5x0.5degree_bilinear

    # cmor requires that the timeseries job produce required variables
    [[cmor]]
        run_frequency = 100
        # the master tables provided by the CMOR project, see: https://github.com/PCMDI/cmor
        cmor_tables_path = /export/baldwin32/projects/cmor/Tables
        # an optional argument to provide a path for custom cmor variable handlers see: https://github.com/E3SM-Project/e3sm_to_cmip
        custom_handlers_path = /export/baldwin32/projects/my_custom_cmor_handlers
        
        mpas_mesh_path = /p/user_pub/e3sm/baldwin32/bgc_processing/cmor_test/mpaso.rst.1855-01-01_00000.nc
        regions_path = /p/user_pub/e3sm/baldwin32/bgc_processing/cmor_test/oEC60to30v3_Atlandtic_region_and_southern_transect.nc
        
        # list of CMIP6 tables to process the data for. The depedencies of each of these
        # must be present in the list if time-series variablse for the given data type
        [[[Amon]]]
            variables = tas, ts, ps, sfcWind, huss, pr, prc, prsn, evspsbl, tauu, tauv, hfls, clt
        [[[Lmon]]]
            variables = mrsos, mrso, mrfso, mrros
        [[[SImon]]]
            variables = sitimefrac, siconc, simass, sithick
        [[[Omon]]]
            variables = soga, sos, sob, sosga, mlotst

# optional config for running diagnostics, remove any of these sections
# to turn off that diagnostic, or the whole thing if you're just running
# post processing jobs
[diags]
    # e3sm_diags options
    [[e3sm_diags]]
        run_frequency = 50
        # the plotting backend to use, mpl for matplotlib or vcs to use vcs
        # mpl is faster, but (in my opinion) vcs looks better
        backend = mpl
        # path to reference observational data
        reference_data_path = /p/cscratch/acme/data/obs_for_acme_diags
        sets_to_run = lat_lon

    # amwg diagnostics options
    [[amwg]]
        run_frequency = 50, 100
        # path to amwg code
        diag_home = /p/cscratch/acme/amwg/amwg_diag
        # which of the amwg "sets" should be run, change this to 'all' to run all sets
        sets = 3, 4, 4a, 5, 6

    # aprime diagnostics options
    [[aprime]]
        run_frequency = 50
        # path to aprime code
        aprime_code_path = /p/cscratch/acme/data/a-prime
    
    # the MPAS-Analysis diagnostic suite
    [[mpas_analysis]]
        # Directory for mapping files (if they have been generated already). If mapping
        # files needed by the analysis are not found here, they will be generated and
        # placed in the output mappingSubdirectory
        mapping_directory = /space2/diagnostics/mpas_analysis/maps
        # a list of which plots to generate, see MPAS-Analysis documentation for details or run "mpas_analysis --list" to get a list
        generate_plots = all_publicObs
        # should mpas analysis use the start of the case for time series and nino index plots
        start_year_offset = True
        # path to MPAS-Analysis observation directories
        ocn_obs_data_path = /space2/diagnostics/observations/Ocean/
        seaice_obs_data_path = /space2/diagnostics/observations/SeaIce/
        region_mask_path = /space2/diagnostics/mpas_analysis/region_masks
        run_MOC = True
        ocean_namelist_name = mpaso_in
        seaice_namelist_name = mpassi_in
    
    [[ilamb]]
        run_frequency = 50, 100
        obs_data_root = /p/user_pub/e3sm/ilamb/DATA
        variables = gpp, rsds, rlds, lai, rsus


# data type definitions. If all the cases use short term archiving nothing should have to change
# for each data type section, you can add an additional sub-section with the case name to denote specific handling
# each config option allows substitutions when in all caps, default substituions are:
#   PROJET_PATH, REMOTE_PATH, CASEID, LOCAL_PATH, YEAR, MONTH, START_YR, END_YR, REST_YR (start year + 1)
[data_types]
    # if running only amwg or e3sm_diags, atm is all you need. All other data types are optional 
    # and only used of running timeseries (on for example lnd), or all the others for 
    # running aprime
    [[atm]]
        # the naming format for this type
        file_format = 'CASEID.cam.h0.YEAR-MONTH.nc'
        # the local path for where to store the data, or where to look for local data
        local_path = 'PROJECT_PATH/input/CASEID/atm'
        # this data is monthly frequency
        monthly = True
        # this case uses a different local_path then the other cases, so its being denoted specificly
        # this is just an example, you can change any of the above options for any case by putting them in
        # a special case-specific section like this
        [[[case.id.number.1]]]
            local_path = 'LOCAL_PATH/input/atm'
    [[lnd]]
        file_format = 'CASEID.clm2.h0.YEAR-MONTH.nc'
        monthly = True
        local_path = 'PROJECT_PATH/input/CASEID/lnd'

    #  these data types are only needed by aprime
    [[cice]]
        file_format = 'mpascice.hist.am.timeSeriesStatsMonthly.YEAR-MONTH-01.nc'
        local_path = 'PROJECT_PATH/input/CASEID/ice'
        monthly = True
    [[ocn]]
        file_format = 'mpaso.hist.am.timeSeriesStatsMonthly.YEAR-MONTH-01.nc'
        local_path = 'PROJECT_PATH/input/CASEID/ocn'
        monthly = True
    [[ocn_restart]]
        file_format = 'mpaso.rst.REST_YR-01-01_00000.nc'
        local_path = 'PROJECT_PATH/input/CASEID/rest'
    [[cice_restart]]
        file_format = 'mpascice.rst.REST_YR-01-01_00000.nc'
        local_path = 'PROJECT_PATH/input/CASEID/rest'
    [[ocn_streams]]
        remote_path = 'REMOTE_PATH/run'
        file_format = 'streams.ocean'
        local_path = 'PROJECT_PATH/input/CASEID/mpas'
    [[cice_streams]]
        file_format = 'streams.cice'
        local_path = 'PROJECT_PATH/input/CASEID/mpas'
    [[ocn_in]]
        file_format = 'mpas-o_in'
        local_path = 'PROJECT_PATH/input/CASEID/mpas'
    [[cice_in]]
        file_format = 'mpas-cice_in'
        local_path = 'PROJECT_PATH/input/CASEID/mpas'
    [[meridionalHeatTransport]]
        file_format = 'mpaso.hist.am.meridionalHeatTransport.START_YR-02-01.nc'
        local_path = 'PROJECT_PATH/input/CASEID/mpas'
 